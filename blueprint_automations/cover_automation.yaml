blueprint:
  name: s42 - Intelligente Rollladensteuerung (UI-Version TriggerFix1)
  description: >
    Steuert Rollläden basierend auf Zeit, Fensterkontakten und Anwesenheitsmodi.
    Die Zuordnung von Rollläden zu Sensoren erfolgt über zwei Listen in der UI, deren Reihenfolge übereinstimmen muss.
  domain: automation
  source_url: https://raw.githubusercontent.com/TheRealSimon42/home_assistant_templates/main/blueprint_automations/cover_automation.yaml
  
  input:
    # --- SEKTION 1: ZUORDNUNG ---
    assignment_section:
      name: Zuordnung
      description: 'Ordne hier jedem Rollladen einen Fenstersensor zu. Die Reihenfolge in beiden Listen muss identisch sein!'
      icon: mdi:vector-link
      input:
        shutters:
          name: Rollläden
          description: 'Wähle alle zu steuernden Rollläden aus. Die Reihenfolge ist entscheidend!'
          selector:
            entity:
              multiple: true
              domain: cover
              device_class: shutter

        window_sensors:
          name: Zugehörige Fensterssensoren
          description: 'Wähle die passenden Fenstersensoren in der exakt gleichen Reihenfolge wie die Rollläden oben aus. Der erste Sensor hier wird dem ersten Rollladen oben zugeordnet, usw.'
          selector:
            entity:
              multiple: true
              domain:
                - binary_sensor
                - sensor

    # --- SEKTION 2: MORGENS ÖFFNEN ---
    morning_section:
      name: Morgens Öffnen
      description: Einstellungen für das automatische Öffnen der Rollläden am Morgen.
      icon: mdi:weather-sunset-up
      collapsed: true
      input:
        morning_time:
          name: Uhrzeit für morgendliches Hochfahren
          description: Ein `input_datetime`-Helfer, der die Uhrzeit für das Hochfahren der Rollläden am Morgen festlegt.
          selector:
            entity:
              domain: input_datetime
              
        morning_shutters:
          name: Rollläden für morgens
          description: Die Rollläden, die morgens hochgefahren werden sollen. Mehrfachauswahl ist möglich.
          selector:
            target:
              entity:
                domain: cover
                device_class: shutter

        morning_position:
          name: Zielposition für morgens
          description: 'Die Position (in %), auf die die Rollläden morgens fahren sollen. Die Aktion wird nur ausgeführt, wenn ein Rollladen geschlossener ist als diese Position.'
          default: 100
          selector:
            number:
              min: 0
              max: 100
              step: 1
              mode: slider
              unit_of_measurement: "%"

    # --- SEKTION 3: FENSTER-INTERAKTION ---
    window_interaction_section:
      name: Fenster-Interaktion
      description: Definiert, wie Rollläden auf geöffnete oder gekippte Fenster reagieren.
      icon: mdi:window-open-variant
      collapsed: true
      input:
        tilted_position:
          name: Zielposition für gekippte Fenster
          description: 'Die Position (in %), auf die ein Rollladen fährt, wenn das Fenster gekippt wird. Die Aktion wird nur ausgeführt, wenn der Rollladen geschlossener ist als diese Position.'
          default: 20
          selector:
            number:
              min: 0
              max: 100
              step: 1
              mode: slider
              unit_of_measurement: "%"
            
        reclose_timeout:
          name: Zeitfenster für automatisches Schließen
          description: Wenn ein Fenster innerhalb dieser Zeit (in Minuten) wieder geschlossen wird, fährt der Rollladen in seine Ausgangsposition zurück.
          default: 30
          selector:
            number:
              min: 1
              max: 120
              unit_of_measurement: Minuten

    # --- SEKTION 4: NACHTMODUS ---
    night_mode_section:
      name: Nachtmodus
      description: Einstellungen für das Schließen der Rollläden bei Nacht.
      icon: mdi:weather-night
      collapsed: true
      input:
        night_mode_boolean:
          name: Nachtmodus Helfer
          description: Ein `input_boolean`-Helfer. Wenn dieser auf 'on' geschaltet wird, werden die Rollläden für die Nacht geschlossen.
          selector:
            entity:
              domain: input_boolean

    # --- SEKTION 5: BENACHRICHTIGUNGEN ---
    notification_section:
      name: Benachrichtigungen
      description: Einstellungen für Benachrichtigungen bei zu lange offenen Fenstern.
      icon: mdi:bell
      collapsed: true
      input:
        notification_timeout:
          name: Benachrichtigung nach X Minuten
          description: Sendet eine Nachricht, wenn ein Fenster länger als diese Zeit offen ist.
          default: 45
          selector:
            number:
              min: 5
              max: 240
              unit_of_measurement: Minuten
              
        notification_device:
          name: Benachrichtigungs-Gerät
          description: Das Gerät oder der Dienst, der die Benachrichtigung erhalten soll (z.B. `notify.mobile_app_dein_handy`).
          selector:
            device:
              multiple: true
              filter:
                integration: mobile_app

        sleep_mode_boolean:
          name: Schlafmodus Helfer (optional)
          description: Optional. Wenn dieser `input_boolean` 'on' ist, werden keine Benachrichtigungen über offene Fenster gesendet.
          default: {}
          selector:
            entity:
              domain: input_boolean
          
mode: parallel
max: 15

variables:
  reclose_timeout_seconds: !input reclose_timeout
  shutters_list: !input shutters
  sensors_list: !input window_sensors
  
trigger:
  - platform: time
    at: !input morning_time
    id: morning_open
    
  - platform: state
    entity_id: !input window_sensors
    to:
      - 'on'
      - 'open'
      - 'tilted'
    for:
      seconds: 2
    id: window_change
    
  - platform: state
    entity_id: !input window_sensors
    to:
      - 'on'
      - 'open'
      - 'tilted'
    for:
      minutes: !input notification_timeout
    id: window_open_long

  - platform: state
    entity_id: !input night_mode_boolean
    to: 'on'
    id: night_close

action:
  - choose:
      - conditions:
          - condition: trigger
            id: morning_open
        sequence:
          - repeat:
              for_each: "{{ expand(inputs.morning_shutters) | map(attribute='entity_id') | list }}"
              sequence:
                - condition: template
                  value_template: "{{ state_attr(repeat.item, 'current_position') | int(101) < inputs.morning_position }}"
                - service: cover.set_cover_position
                  target:
                    entity_id: "{{ repeat.item }}"
                  data:
                    position: !input morning_position
            
      - conditions:
          - condition: trigger
            id: night_close
        sequence:
          - repeat:
              for_each: !input shutters
              sequence:
                - variables:
                    shutter: "{{ repeat.item }}"
                    sensor: "{{ sensors_list[repeat.index] }}"
                - choose:
                    - conditions:
                        - "{{ states(sensor) in ['on', 'open', 'tilted'] }}"
                      sequence:
                        - service: cover.set_cover_position
                          target:
                            entity_id: "{{ shutter }}"
                          data:
                            position: 15
                  default:
                    - service: cover.close_cover
                      target:
                        entity_id: "{{ shutter }}"
                        
      - conditions:
          - condition: trigger
            id: window_open_long
          - >
            {{ not is_state(sleep_mode_boolean, 'on') if sleep_mode_boolean else true }}
        sequence:
          - service: notify.notify
            target:
              device_id: !input notification_device
            data:
              message: "Fenster '{{ state_attr(trigger.entity_id, 'friendly_name') }}' ist seit über {{ notification_timeout }} Minuten offen."
              title: "Fenster offen"

      - conditions:
          - condition: trigger
            id: window_change
        sequence:
          - variables:
              triggered_sensor: "{{ trigger.entity_id }}"
              triggered_index: "{{ sensors_list.index(triggered_sensor) }}"
              shutter: "{{ shutters_list[triggered_index] }}"
              
          - service: scene.create
            data:
              scene_id: "{{ 'reclose_' ~ shutter | slugify }}"
              snapshot_entities:
                - "{{ shutter }}"

          - choose:
              - conditions:
                  - "{{ trigger.to_state.state == 'tilted' }}"
                  - "{{ state_attr(shutter, 'current_position') | int(101) < inputs.tilted_position }}"
                sequence:
                  - service: cover.set_cover_position
                    data:
                      position: !input tilted_position
                    target:
                      entity_id: "{{ shutter }}"

              - conditions:
                  - "{{ trigger.to_state.state in ['on', 'open'] }}"
                sequence:
                  - service: cover.open_cover
                    target:
                      entity_id: "{{ shutter }}"

          - wait_for_trigger:
              - platform: template
                value_template: "{{ states(triggered_sensor) in ['off', 'closed'] }}"
            timeout:
              minutes: "{{ reclose_timeout_seconds }}"
            continue_on_timeout: true
            
          - if: "{{ wait.trigger }}"
            then:
              - service: scene.turn_on
                target:
                  entity_id: "{{ 'scene.reclose_' ~ shutter | slugify }}"
